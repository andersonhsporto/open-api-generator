openapi: 3.0.3
info:
  title: Swagger Sample API
  description:
    Simple API made with Spring Boot and openapi generator
  termsOfService: http://swagger.io/terms/
  contact:
    email: anderson.higo2@gmail.com
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
tags:
  - name: beer
    description: Everything about your beer
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: brewery
    description: Access to brewery information
  - name: user
    description: Operations about user
paths:
  /beer/{id}:
    delete:
      tags:
        - beer
      summary: Delete an existing beer
      description: ''
      operationId: deleteBeer
      parameters:
        - name: id
          in: path
          description: Id of beer in database
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Beer not found
        '405':
          description: Validation exception
      deprecated: false
    get:
      security:
        - BasicAuth: [admin]   # Use OAuth with a different scope
      tags:
        - beer
      summary: Find beer by ID
      description: Returns a single beer
      operationId: getBeerById
      parameters:
        - name: id
          in: path
          description: Id of beer in database
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beer'
            application/xml:
              schema:
                $ref: '#/components/schemas/Beer'
        '400':
          description: Invalid ID supplied
        '404':
          description: Beer not found
        '405':
          description: Validation exception
      deprecated: false
  /beer:
    put:
      tags:
        - beer
      summary: Update an existing beer
      description: ''
      operationId: updateBeer
      requestBody:
        description: Update an existent brewery
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Beer'
          application/xml:
            schema:
              $ref: '#/components/schemas/Beer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Beer'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beer'
            application/xml:
              schema:
                $ref: '#/components/schemas/Beer'
        '400':
          description: Invalid ID supplied
        '404':
          description: Beer not found
        '405':
          description: Validation exception
      deprecated: false
    post:
      tags:
        - beer
      summary: Add a new beer to the store
      description: ''
      operationId: addBeer
      requestBody:
        description: Add new beer to database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Beer'
          application/xml:
            schema:
              $ref: '#/components/schemas/Beer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Beer'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beer'
    get:
      tags:
        - beer
      summary: Find All Beers
      description: Returns all beers
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Beer'
        '400':
          description: Invalid ID supplied
        '404':
          description: Beer not found
components:
  schemas:
    Beer:
      type: object
      x-class-extra-annotation: "@jakarta.persistence.Entity"
      properties:
        id:
          type: integer
          format: int64
          example: 1
          x-field-extra-annotation: "@jakarta.persistence.Id"
          x-field-annotation: "@jakarta.persistence.GeneratedValue(strategy = GenerationType.IDENTITY)"
        name:
          type: string
        tag:
          type: string
        description:
          type: string
  requestBodies:
    Beer:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Beer'
      description: Beer object that needs to be added to the store
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic

    BearerAuth:
      type: http
      scheme: bearer